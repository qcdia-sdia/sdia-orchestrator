openapi: 3.0.0
info:
  title: sdia-orchestrator
  description: Software Defined Infrastructure Automator orchestrator. Orchestrator
    for TOSCA workflows. Deploys, manages at runtime or undeploys a TOSCA topology
    of declarative workflows and imperative workflows. Generates declarative workflows
    which are automatically generated by the orchestrator based on nodes, relationships,
    and groups defined in the topology. The Orchestrator also executes imperative
    workflows which are manually specified.
  contact:
    email: S.Koulouzis@uva.nl
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: /sdia-orchestrator/1.0.0
security:
- oAuth:
  - read
  - modify
paths:
  /tosca_template:
    post:
      summary: upload a tosca template description file
      description: uploads and validates TOSCA template file
      operationId: upload_tosca_template
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/body'
      responses:
        "200":
          description: successful operation
          content:
            '*/*':
              schema:
                type: string
                x-content-type: '*/*'
        "405":
          description: Invalid input
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /tosca_template/ids:
    get:
      summary: Get all topolog template IDs
      description: Returns all IDs
      operationId: get_tosca_template_i_ds
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                x-content-type: application/json
        "400":
          description: Invalid ID supplied
        "404":
          description: ToscaTemplate not found
        "405":
          description: Invalid input
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /tosca_template/{id}:
    get:
      summary: Find topolog template by ID
      description: Returns a single topolog template
      operationId: get_tosca_template_by_id
      parameters:
      - name: id
        in: path
        description: ID of topolog template to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: filter
        in: query
        description: the filters to use for finding tosca templates
        required: false
        style: form
        explode: true
        schema:
          type: object
          additionalProperties:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            json/application:
              schema:
                $ref: '#/components/schemas/ToscaTemplate'
        "400":
          description: Invalid ID supplied
        "404":
          description: ToscaTemplate not found
        "405":
          description: Invalid input
      x-openapi-router-controller: swagger_server.controllers.default_controller
    put:
      summary: Updates exisintg topolog template
      operationId: update_tosca_template_by_id
      parameters:
      - name: id
        in: path
        description: ID of topolog template to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/body_1'
      responses:
        "200":
          description: successful operation
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "400":
          description: Invalid ID supplied
        "404":
          description: ToscaTemplate not found
        "405":
          description: Invalid input
      x-openapi-router-controller: swagger_server.controllers.default_controller
    delete:
      summary: Deletes a tosca topology template
      description: If the topology is provisoned it will delete the provison (Infrastructure).
        If it is deployed it will delete the deploymet too (Application)
      operationId: delete_tosca_template_by_id
      parameters:
      - name: id
        in: path
        description: ID of topology template to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: node_names
        in: query
        description: The node(s) to delete
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            json/application:
              schema:
                type: string
                x-content-type: json/application
        "400":
          description: Invalid ID supplied
        "404":
          description: ToscaTemplate not found
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /tosca_template/{id}/plan:
    get:
      summary: generate a plan for this topolog template by ID
      description: Returns  the ID of the planned topolog template
      operationId: get_plan
      parameters:
      - name: id
        in: path
        description: ID of topolog template
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            json/application:
              schema:
                type: string
                x-content-type: json/application
        "400":
          description: Invalid ID supplied
        "404":
          description: ToscaTemplate not found
        "405":
          description: Invalid input
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /tosca_template/{id}/workflow:
    get:
      summary: generate a workflow for this topolog template by ID
      description: Returns  the ID of the topolog template with the added workflow
      operationId: get_workflow
      parameters:
      - name: id
        in: path
        description: ID of topolog template
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "400":
          description: Invalid ID supplied
        "404":
          description: ToscaTemplate not found
        "405":
          description: Invalid input
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /tosca_template/{id}/workflow/execute:
    get:
      summary: execute a workflow for this topolog template by ID
      description: Returns  the ID of the topolog template with the added workflow
      operationId: execute_workflow
      parameters:
      - name: id
        in: path
        description: ID of topolog template
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        "400":
          description: Invalid ID supplied
        "404":
          description: ToscaTemplate not found
        "405":
          description: Invalid input
      x-openapi-router-controller: swagger_server.controllers.default_controller
components:
  schemas:
    Credential:
      type: object
    NodeTemplate:
      type: object
    TopologyTemplate:
      type: object
    ToscaTemplate:
      type: object
    NodeTemplateMap:
      type: object
    body:
      required:
      - file
      type: object
      properties:
        file:
          type: string
          description: tosca Template description
          format: binary
    body_1:
      type: object
      properties:
        file:
          type: string
          description: tosca Template description
          format: binary
  securitySchemes:
    oAuth:
      type: oauth2
      description: This API uses OAuth 2 with the implicit grant flow.
      flows:
        implicit:
          authorizationUrl: /oauth2/authorize
          scopes:
            read_tosca: read
            write_tosca: modify
      x-tokenInfoFunc: swagger_server.controllers.authorization_controller.check_oAuth
      x-scopeValidateFunc: swagger_server.controllers.authorization_controller.validate_scope_oAuth

